services:
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - mern
  
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 5
      timeout: 10s
    networks:
      - mern
    volumes:
      - redis-data:/data
  backend:
    build: ./backend
    container_name: backend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - mongo
      - redis
    environment:
      - MONGO_URI=mongodb://mongo:27017/itools
      - REDIS_URL=redis://redis:6379
    networks:
      - mern
    env_file:
      - .env.backend

  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    depends_on:
      - backend
    volumes:
      - frontend-data:/app/dist
    networks:
      - mern
    env_file:
      - .env.frontend
  caddy:
    image: caddy:alpine
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - frontend-data:/usr/share/caddy
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend
    networks:
      - mern
volumes:
  caddy_data:
  caddy_config:
  frontend-data:
  mongo-data:
  redis-data:
networks:
  mern:
    driver: bridge
